/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.cbi.clientesviewer;

import java.util.List;
import javax.persistence.Query;
import javax.persistence.EntityManager;
import javax.persistence.Persistence;
import lib.Clientes;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.cbi.clientesviewer//ClientesViewer//EN",
autostore = false)
@TopComponent.Description(preferredID = "ClientesViewerTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "org.cbi.clientesviewer.ClientesViewerTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_ClientesViewerAction",
preferredID = "ClientesViewerTopComponent")
public final class ClientesViewerTopComponent extends TopComponent implements ExplorerManager.Provider {

    private static ExplorerManager em = new ExplorerManager();
    
    public ClientesViewerTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(ClientesViewerTopComponent.class, "CTL_ClientesViewerTopComponent"));
        setToolTipText(NbBundle.getMessage(ClientesViewerTopComponent.class, "HINT_ClientesViewerTopComponent"));
        
        /*esta es al parte de JPA, donde se obtienen los datos d ela base de datos*/
        EntityManager entityManager = Persistence.createEntityManagerFactory("GimnasioLibraryPU").createEntityManager();
        Query query = entityManager.createNamedQuery("Clientes.findAll");
        List<Clientes> resultList = query.getResultList();
        this.setDisplayName("Clientes");
        
        /*A partir de aca es la parte de la API de netbeans*/
        
        //ClientesChildFactory extiende ChildFactory que es la clase que sirve para crear nodos y sus hijos
        // ahi se implementa como se crean estos nodos. Ahora se esta implementando con Bean Node.\
       
        ClientesChildFactory childFactory = new ClientesChildFactory(resultList);
        AbstractNode nodeClientes = new AbstractNode(Children.create(childFactory, true));
        nodeClientes.setName("Clientes");//esto no puede estar en duro!. 
        em.setRootContext(nodeClientes);
        //em.setRootContext(new AbstractNode(Children.create(childFactory, true)));
        //em.setRootContext(new AbstractNode(Children.create(new ClientesChildFactory(resultList), true)));
        associateLookup(ExplorerUtils.createLookup(em, getActionMap()));
    }   

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        beanTreeView1 = new org.openide.explorer.view.BeanTreeView();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(beanTreeView1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(111, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(beanTreeView1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.openide.explorer.view.BeanTreeView beanTreeView1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
       @Override
       public ExplorerManager getExplorerManager() {
           return em;
           }
}
